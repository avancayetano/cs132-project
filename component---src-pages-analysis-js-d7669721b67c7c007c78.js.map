{"version":3,"file":"component---src-pages-analysis-js-d7669721b67c7c007c78.js","mappings":"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","sources":["webpack://cs-132-project/./src/components/Navbar.js","webpack://cs-132-project/./src/components/Footer.js","webpack://cs-132-project/./src/components/BasePage.js","webpack://cs-132-project/./src/components/ExtLink.js","webpack://cs-132-project/./src/components/Image.js","webpack://cs-132-project/./src/components/analysis/Results.js","webpack://cs-132-project/./src/graphs/confusion_disinfo.png","webpack://cs-132-project/./src/components/analysis/DataModeling.js","webpack://cs-132-project/./src/pages/analysis.js","webpack://cs-132-project/./src/graphs/suspect_events.png","webpack://cs-132-project/./src/images/logo circle.png","webpack://cs-132-project/./src/images/tweetPerception.png"],"sourcesContent":["import React from \"react\";\nimport { Link, navigate } from \"gatsby\";\n\nimport logo from \"../images/logo circle.png\";\n\nconst Navbar = (props) => {\n  const tabs = [\n    {\n      label: \"Overview\",\n      link: \"/\",\n    },\n    {\n      label: \"Problem\",\n      link: \"/problem\",\n    },\n    {\n      label: \"Collection\",\n      link: \"/collection\",\n    },\n    {\n      label: \"Exploration\",\n      link: \"/exploration\",\n    },\n    {\n      label: \"Analysis\",\n      link: \"/analysis\",\n    },\n    {\n      label: \"Conclusion\",\n      link: \"/conclusion\",\n    },\n    {\n      label: \"About\",\n      link: \"/about\",\n    },\n  ];\n\n  return (\n    <nav className=\"navbar bg-base-100 sticky top-0 border z-10 border-b-2 border-x-0 mb-8\">\n      <div className=\"navbar-start\">\n        <label\n          htmlFor=\"my-drawer\"\n          className=\"btn btn-ghost drawer-button hidden\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            className=\"inline-block w-5 h-5 stroke-current\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            ></path>\n          </svg>\n        </label>\n        <Link to=\"/\" className=\"btn btn-ghost normal-case text-xl\">\n          <img src={logo} className=\"h-6 mr-1 sm:h-9\" alt=\"Logo\" />\n          Chismisinfo\n        </Link>\n      </div>\n      <div className=\"navbar-center\">\n        <ul className=\"menu menu-horizontal px-1\">\n          {tabs.map((tab) => (\n            <li key={tab.label}>\n              <div\n                onClick={() => {\n                  window.scrollTo({ top: 0 });\n                  navigate(tab.link);\n                }}\n                className={\n                  (props.page === tab.label\n                    ? \"btn btn-primary text-white \"\n                    : \"\") + \"font-semibold\"\n                }\n              >\n                {tab.label}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"navbar-end\"></div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer className=\"footer footer-center p-4 bg-base-300 text-base-content\">\n        <div>\n          <p>Chismisinformation Team</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nconst BasePage = (props) => {\n  return (\n    <div className=\"drawer\">\n      <input id=\"my-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\n      <div className=\"drawer-content\">\n        <Navbar page={props.page} />\n        <div className=\"relative mb-16 min-h-screen\">{props.children}</div>\n        <Footer />\n      </div>\n      <div className=\"drawer-side\">\n        <label htmlFor=\"my-drawer\" className=\"drawer-overlay\"></label>\n        <ul className=\"menu p-4 w-80 bg-base-100 text-base-content\">\n          <li>\n            <div className=\"font-bold btn-disabled bg-transparent\">Outline</div>\n          </li>\n          <li>\n            <div>Sidebar Item 1</div>\n          </li>\n          <li>\n            <div>Sidebar Item 2</div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BasePage;\n","import React from \"react\";\r\n\r\nconst ExtLink = (props) => {\r\n  return (\r\n    <a\r\n      href={props.to}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className={props.className}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ExtLink;\r\n","import React from \"react\";\n\nconst Image = (props) => {\n  return (\n    <div className=\"content-center\">\n      <figure>\n        <img className={`m-auto ${props.width}`} src={props.image} />\n      </figure>\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ExtLink from \"../ExtLink\";\nimport Image from \"../Image\";\nimport tweet_perception from \"../../images/tweetPerception.png\";\nimport suspect_events from \"../../graphs/suspect_events.png\";\nconst Results = () => {\n  return (\n    <div>\n      {/* <h3>???Number of Disinformation Tweets received by each Robredo???</h3> */}\n      {/* <h3 id=\"results-suspect-events\">\n        Suspect Events leading to Disinformation Incident\n      </h3>\n      <div>\n        <Image image={suspect_events}></Image>\n      </div>\n      <h3>Tweet Perception</h3>\n      <div>\n        <Image image={tweet_perception}></Image>\n      </div> */}\n\n      <h2 id=\"results-hypothesis\">Statistical Analysis</h2>\n      <p>\n        The code for this section can be found in{\" \"}\n        <ExtLink\n          to={\n            \"https://github.com/avancayetano/chismisinfo-backend/blob/main/analysis/apply_chi_square.py\"\n          }\n        >\n          apply_chi_square.py\n        </ExtLink>\n      </p>\n      <p>\n        <b>Research Question: </b>Is there a significant difference between\n        tweet disinformation groups in terms of sentiment towards Leni Robredo?\n      </p>\n      <h3>Contingency Table</h3>\n      <p>\n        Note: this is the tabular form of{\" \"}\n        <Link to=\"/exploration/#tweet-perception-123\">this graph.</Link>\n      </p>\n      <table className=\"table table-compact mx-auto\">\n        <tr>\n          <td></td>\n          <th></th>\n          <th>Leni Sentiment</th>\n          <th></th>\n        </tr>\n        <tr>\n          <td></td>\n          <th>Negative</th>\n          <th>Neutral</th>\n          <th>Postive</th>\n        </tr>\n        <tr>\n          <th>Disinformation</th>\n          <td>92</td>\n          <td>111</td>\n          <td>0</td>\n        </tr>\n        <tr>\n          <th>Non-disinformation</th>\n          <td>0</td>\n          <td>218</td>\n          <td>47</td>\n        </tr>\n      </table>\n      <h3>Hypothesis Testing</h3>\n      <p>\n        We used chi-square test for independence to test whether or not to\n        reject the null hypothesis.\n      </p>\n      <table className=\"table table-compact w-1/4 mx-auto z-0\">\n        <tr>\n          <th>Chi Square Statistic</th>\n          <td>169.01</td>\n        </tr>\n        <tr>\n          <th>p-value</th>\n          <td>2.00e-37</td>\n        </tr>\n      </table>\n      <p>\n        <b>Reject the null hypothesis:</b> There is a significant difference\n        between the disinformation groups in terms of sentiment towards Leni\n        Robredo.\n      </p>\n    </div>\n  );\n};\n\nexport default Results;\n","export default __webpack_public_path__ + \"static/confusion_disinfo-8136ed43f6d6e6c590003ea05b5c733d.png\";","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ExtLink from \"../ExtLink\";\n\nimport confusion_disinfo from \"../../graphs/confusion_disinfo.png\";\nimport Image from \"../Image\";\n\nconst DataModeling = () => {\n  return (\n    <div>\n      <p>\n        We created a disinformation classifier that aims to classify if a given\n        tweet is disinformation or not. The purpose of this is so that we can\n        identify the recurring patterns or features occuring among\n        disinformation tweets -- in other words, what are the best{\" \"}\n        <b>predictors</b> that identify a disinformation tweet.\n      </p>\n      <p>\n        The code for this section can be found in{\" \"}\n        <ExtLink to=\"https://github.com/avancayetano/chismisinfo-backend/blob/main/analysis/disinfo_classifier.py\">\n          disinfo_classifier.py.\n        </ExtLink>\n      </p>\n      <h3>Model Structure</h3>\n      <p>\n        We used gradient-boosted trees as our model, using the software library{\" \"}\n        <ExtLink to=\"https://github.com/dmlc/xgboost\">XGBoost</ExtLink>. The\n        features are the{\" \"}\n        <Link to=\"/exploration/#nlp\">vectorized tweet tokens</Link>,\n        leni_sentiment, and marcos_sentiment. The target variable is whether or\n        not a tweet is disinformation or not.\n      </p>\n      <p>\n        Here, we used 201 disinformation tweets and 265 non-disinformation\n        tweets as our samples. We performed 5-fold cross-validation on this\n        dataset.\n      </p>\n      <h3>Classification Report</h3>\n      <p>\n        The table below shows the classification report of our model -- averaged\n        over the five rounds of cross-validation. The model performed well given{\" \"}\n        <code>f1 scores</code> of about <code>0.8</code> and{\" \"}\n        <code>accuracy</code> of <code>0.81</code>.\n      </p>\n      <div className=\"center\">\n        <table className=\"table table-compact w-1/2 mx-auto z-0\">\n          <tr>\n            <td></td>\n            <th>Precision</th>\n            <th>Recall</th>\n            <th>F1 Score</th>\n            <th>Support</th>\n          </tr>\n          <tr>\n            <th>Disinformation</th>\n            <td>0.82</td>\n            <td>0.85</td>\n            <td>0.84</td>\n            <td>53</td>\n          </tr>\n          <tr>\n            <th>Non-disinformation</th>\n            <td>0.81</td>\n            <td>0.76</td>\n            <td>0.78</td>\n            <td>40.2</td>\n          </tr>\n          <tr>\n            <th>Accuracy</th>\n            <td></td>\n            <td></td>\n            <td>0.81</td>\n            <td>93</td>\n          </tr>\n        </table>\n      </div>\n      <h3>Confusion Matrix</h3>\n      <div>\n        The figure below shows the classification confusion matrix of our model\n        -- averaged over the five rounds of cross-validation.\n        <Image image={confusion_disinfo} width=\"w-1/2\" />\n      </div>\n      <h3>Most Important Features</h3>\n      <p>\n        The following features (mostly) decide the disinformation classification\n        problem. This is based on XGBoost's{\" \"}\n        <ExtLink to=\"https://xgboost.readthedocs.io/en/stable/R-package/discoverYourData.html#feature-importance\">\n          feature importance.\n        </ExtLink>{\" \"}\n        In particular, it is based on <code>gain</code> or the improvement in\n        accuracy when this feature is used to split a branch.\n      </p>\n      <ol>\n        <li>\n          <code>leni_sentiment</code> (label)\n        </li>\n        <li>igorot (token)</li>\n        <li>educate (token)</li>\n        <li>jillian (token)</li>\n        <li>fake (token)</li>\n        <li>facewithtearsofjoy (emoji token)</li>\n      </ol>\n      <h3>Insights</h3>\n      <p>\n        While the tweets' primary targets were the Robredo siblings, many of the\n        tweets malign the image of ex-VP Robredo as well. In fact, as we've just\n        seen, a tweet's sentiment towards ex-VP Robredo is an important\n        predictor if it is disinformation or not. In fact, a tweet with negative\n        sentiment towards the ex-VP will{\" \"}\n        <Link to={\"/exploration/#tweet-perception-123\"}>\n          most likely be a disinformation tweet\n        </Link>\n        . This is consistent with our findings in{\" \"}\n        <Link to=\"/analysis/#results-hypothesis\">Statistical Analysis.</Link>{\" \"}\n      </p>\n      <p>\n        This observation, combining with the fact that most of disinformation\n        tweets were posted just{\" \"}\n        <Link to=\"/exploration/#cumulative-disinfo\">\n          one month before the election\n        </Link>\n        , tells us that the disinformation tweets targeting the Robredo siblings\n        were somehow linked to the national elections. In particular, we\n        conjecture that disinformation tweets targeting the Robredo sisters have\n        the primary goal to ruin the image of the ex-VP just because she was\n        running for presidency. In other words, the Robredo siblings were used\n        by trolls and fake news peddlers to ruin the image of the ex-VP in order\n        to reduce her chances of winning the national elections.\n      </p>\n    </div>\n  );\n};\n\nexport default DataModeling;\n","import React from \"react\";\nimport BasePage from \"../components/BasePage\";\nimport { Link } from \"gatsby\";\nimport Results from \"../components/analysis/Results\";\nimport DataModeling from \"../components/analysis/DataModeling\";\n\nconst AnalysisPage = () => {\n  return (\n    <BasePage page={\"Analysis\"}>\n      <article className=\"prose text-justify lg:prose-xl mx-auto prose-a:text-blue-600\">\n        <h1 className=\"text-center\">Data Analysis</h1>\n        <section className=\"text-center\">\n          Make sure that you've read the{\" \"}\n          <Link to=\"/exploration\">Data Exploration</Link> page first.\n        </section>\n        <section>\n          <Results></Results>\n          {/* <table>\n            <tr>\n              <td></td>\n            </tr>\n            <tr></tr>\n            <tr></tr>\n          </table> */}\n        </section>\n        <section>\n          <h2 id=\"data-modeling\">Disinformation Classifier</h2>\n          <DataModeling></DataModeling>\n        </section>\n      </article>\n    </BasePage>\n  );\n};\n\nexport default AnalysisPage;\n\nexport const Head = () => (\n  <>\n    <title>Chismisinfo | Data Analysis</title>\n    <meta name=\"viewport\" content=\"width=1024\"></meta>\n  </>\n);\n","export default __webpack_public_path__ + \"static/suspect_events-a8b99f85d032d488ad5a5f243e2ccb8a.png\";","export default __webpack_public_path__ + \"static/logo circle-9e75896901c4163f6e95d83fc8f8718d.png\";","export default __webpack_public_path__ + \"static/tweetPerception-00ea640ad41fff243daaf0adffd9eb0e.png\";"],"names":["props","React","className","htmlFor","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","src","logo","alt","label","link","map","tab","key","onClick","window","scrollTo","top","navigate","page","Footer","id","type","Navbar","children","href","target","rel","width","image","Results","ExtLink","DataModeling","Image","confusion_disinfo","AnalysisPage","BasePage","Head","name","content"],"sourceRoot":""}