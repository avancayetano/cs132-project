{"version":3,"file":"component---src-pages-collection-js-8968befe6b79406a4734.js","mappings":"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","sources":["webpack://cs-132-project/./src/components/Navbar.js","webpack://cs-132-project/./src/components/Footer.js","webpack://cs-132-project/./src/components/BasePage.js","webpack://cs-132-project/./src/components/ExtLink.js","webpack://cs-132-project/./src/pages/collection.js","webpack://cs-132-project/./src/images/logo circle.png"],"sourcesContent":["import React from \"react\";\nimport { Link, navigate } from \"gatsby\";\n\nimport logo from \"../images/logo circle.png\";\n\nconst Navbar = (props) => {\n  const tabs = [\n    {\n      label: \"Overview\",\n      link: \"/\",\n    },\n    {\n      label: \"Problem\",\n      link: \"/problem\",\n    },\n    {\n      label: \"Collection\",\n      link: \"/collection\",\n    },\n    {\n      label: \"Exploration\",\n      link: \"/exploration\",\n    },\n    {\n      label: \"Analysis\",\n      link: \"/analysis\",\n    },\n    {\n      label: \"Conclusion\",\n      link: \"/conclusion\",\n    },\n    {\n      label: \"About\",\n      link: \"/about\",\n    },\n  ];\n\n  return (\n    <nav className=\"navbar bg-base-100 sticky top-0 border z-10 border-b-2 border-x-0 mb-8\">\n      <div className=\"navbar-start\">\n        <label\n          htmlFor=\"my-drawer\"\n          className=\"btn btn-ghost drawer-button hidden\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            className=\"inline-block w-5 h-5 stroke-current\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            ></path>\n          </svg>\n        </label>\n        <Link to=\"/\" className=\"btn btn-ghost normal-case text-xl\">\n          <img src={logo} className=\"h-6 mr-1 sm:h-9\" alt=\"Logo\" />\n          Chismisinfo\n        </Link>\n      </div>\n      <div className=\"navbar-center\">\n        <ul className=\"menu menu-horizontal px-1\">\n          {tabs.map((tab) => (\n            <li key={tab.label}>\n              <div\n                onClick={() => {\n                  window.scrollTo({ top: 0 });\n                  navigate(tab.link);\n                }}\n                className={\n                  (props.page === tab.label\n                    ? \"btn btn-primary text-white \"\n                    : \"\") + \"font-semibold\"\n                }\n              >\n                {tab.label}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"navbar-end\"></div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer className=\"footer footer-center p-4 bg-base-300 text-base-content\">\n        <div>\n          <p>Chismisinformation Team</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nconst BasePage = (props) => {\n  return (\n    <div className=\"drawer\">\n      <input id=\"my-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\n      <div className=\"drawer-content\">\n        <Navbar page={props.page} />\n        <div className=\"relative mb-16 min-h-screen\">{props.children}</div>\n        <Footer />\n      </div>\n      <div className=\"drawer-side\">\n        <label htmlFor=\"my-drawer\" className=\"drawer-overlay\"></label>\n        <ul className=\"menu p-4 w-80 bg-base-100 text-base-content\">\n          <li>\n            <div className=\"font-bold btn-disabled bg-transparent\">Outline</div>\n          </li>\n          <li>\n            <div>Sidebar Item 1</div>\n          </li>\n          <li>\n            <div>Sidebar Item 2</div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BasePage;\n","import React from \"react\";\r\n\r\nconst ExtLink = (props) => {\r\n  return (\r\n    <a\r\n      href={props.to}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className={props.className}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ExtLink;\r\n","import React from \"react\";\r\nimport BasePage from \"../components/BasePage\";\r\nimport ExtLink from \"../components/ExtLink\";\r\n\r\nconst CollectionPage = () => {\r\n  return (\r\n    <BasePage page={\"Collection\"}>\r\n      <article className=\"prose lg:prose-xl mx-auto prose-a:text-blue-600\">\r\n        <h1 className=\"text-center\">Data Collection</h1>\r\n        <section className=\"text-center\">\r\n          The codes corresponding to the processes discussed on this page can be\r\n          found on this link:{\" \"}\r\n          <ExtLink to=\"https://github.com/avancayetano/chismisinfo-backend/tree/main/scraper\">\r\n            scraper/\r\n          </ExtLink>\r\n        </section>\r\n        <section>\r\n          <h2>Web Scraping</h2>\r\n          <p className=\"text-justify\">\r\n            Using the web scraping tool called{\" \"}\r\n            <ExtLink to=\"https://github.com/JustAnotherArchivist/snscrape\">\r\n              snscrape\r\n            </ExtLink>\r\n            , we were able to scrape 2,730 unique tweets. Unfortunately, due to\r\n            time constraints, we were not able to review and classify each\r\n            scraped tweet whether it is a disinformation tweet or not. However,\r\n            from these tweets, we managed to identify 203 disinformation tweets\r\n            from 158 accounts. Moreover, we also identified 265\r\n            non-disinformation tweets as a control dataset for our data\r\n            analysis.\r\n          </p>\r\n          <h3>Data Columns</h3>\r\n          <p>\r\n            The following are all the columns automatically labeled by the\r\n            scraper.\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>tweet_id</td>\r\n                  <td>tweet_url</td>\r\n                  <td>keywords</td>\r\n                  <td>account_handle</td>\r\n                  <td>account_name</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>account_bio</td>\r\n                  <td>account_bio_rendered</td>\r\n                  <td>account_verified</td>\r\n                  <td>joined</td>\r\n                  <td>following</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>followers</td>\r\n                  <td>location</td>\r\n                  <td>tweet</td>\r\n                  <td>tweet_rendered</td>\r\n                  <td>date_posted</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>likes</td>\r\n                  <td>replies</td>\r\n                  <td>retweets</td>\r\n                  <td>quote_tweets</td>\r\n                  <td>views</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>source_url</td>\r\n                  <td>source_label</td>\r\n                  <td>links_url</td>\r\n                  <td>media</td>\r\n                  <td>retweeted_tweet_id</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>quoted_tweet_id</td>\r\n                  <td>in_reply_to_tweet_id</td>\r\n                  <td>in_reply_to_user_id</td>\r\n                  <td>conversation_id</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </p>\r\n        </section>\r\n        <section>\r\n          <h2>Date Labeling</h2>\r\n          <p className=\"text-justify\">\r\n            Aside from the columns above, we also added new columns which we\r\n            manually labeled. These new columns are:\r\n            <ul>\r\n              <li>\r\n                leni_sentiment - The tweet's sentiment (negative, neutral,\r\n                positive) towards former Vice President Robredo.\r\n              </li>\r\n              <li>\r\n                marcos_sentiment - The tweet's sentiment (negative, neutral,\r\n                positive) towards President Marcos Jr.\r\n              </li>\r\n              <li>\r\n                incident - The incident associated to the misinformation tweet.\r\n                This is expounded below.\r\n              </li>\r\n              <li>\r\n                account_type - Indicates whether the account is anonymous,\r\n                identified, or media.\r\n              </li>\r\n              <li>\r\n                tweet_type - Indicates whether the tweet is text, reply, image,\r\n                URL, video, or a combination of these.\r\n              </li>\r\n              <li>\r\n                content_type - Indicates whether the tweet is rational,\r\n                emotional, transactional, or a combination of these.\r\n              </li>\r\n              <li>\r\n                country - Indicates the country of the account based on their\r\n                profile location field.\r\n              </li>\r\n              <li>\r\n                has_leni_ref - Indicates whether the tweet contains references\r\n                to former Vice President Robredo (labeled as 1 if there is a\r\n                reference, 0 otherwise).\r\n              </li>\r\n              <li>\r\n                alt-text - The alt-text of the tweet in case it contains videos,\r\n                images, or articles.\r\n              </li>\r\n            </ul>\r\n            We added these manually labeled columns to the columns produced by\r\n            the scraper. In other words, the tweet data that we used in data\r\n            exploration (and we'll be using in data analysis) have all the\r\n            columns stated above (union of the columns produced by the scraper\r\n            and the columns we manually labeled.)\r\n          </p>\r\n          <h3>The Allegations/Incidents</h3>\r\n          <p>\r\n            We have identified five disinformation topics/incidents about the\r\n            Robredo sisters.\r\n          </p>\r\n          <ul>\r\n            <li>Jillian Robredo heckling at Baguio (codename: Baguio)</li>\r\n            <li>\r\n              Alleged ladder incident involving Tricia Robredo (codename:\r\n              Ladder)\r\n            </li>\r\n            <li>\r\n              Alleged sensitive videos of Aika and Tricia Robredo (codename:\r\n              Scandal)\r\n            </li>\r\n            <li>\r\n              Alleged quarantine violation by the Robredo's (codename:\r\n              Quarantine)\r\n            </li>\r\n            <li>\r\n              Other topics include, \"dissemination of anti-BBM flyers,\" and\r\n              \"accusing Leni of using public funds for her daughter's Harvard\r\n              tuition.\" (codename: Others)\r\n            </li>\r\n          </ul>\r\n          The codenames indicated above are used to label the{\" \"}\r\n          <code>incident</code> column.\r\n        </section>\r\n      </article>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default CollectionPage;\r\n\r\nexport const Head = () => (\r\n  <>\r\n    <title>Chismisinfo | Data Collection</title>\r\n    <meta name=\"viewport\" content=\"width=1024\"></meta>\r\n  </>\r\n);\r\n","export default __webpack_public_path__ + \"static/logo circle-9e75896901c4163f6e95d83fc8f8718d.png\";"],"names":["props","React","className","htmlFor","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","src","logo","alt","label","link","map","tab","key","onClick","window","scrollTo","top","navigate","page","Footer","id","type","Navbar","children","href","target","rel","CollectionPage","BasePage","ExtLink","Head","name","content"],"sourceRoot":""}